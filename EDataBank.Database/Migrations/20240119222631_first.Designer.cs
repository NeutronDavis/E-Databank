// <auto-generated />
using System;
using EDataBank.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EDataBank.Database.Migrations
{
    [DbContext(typeof(EDataBankDbContext))]
    [Migration("20240119222631_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPlatformAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CanApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanExecute")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.UserGroup", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserGroupId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserGroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CppInChurch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAcountValidated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAccessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastVisitedMenuId")
                        .HasColumnType("int");

                    b.Property<string>("LastVisitedMenuUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastVisitedSubMenuId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Nationality1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Nationality2Id")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdinationRankOfSpouse")
                        .HasColumnType("int");

                    b.Property<int?>("OrdinationYear")
                        .HasColumnType("int");

                    b.Property<int?>("OtherBandsAssociation")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PrincipalBandId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicExtention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePics")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegsiteredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfMarriage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.HasIndex("BranchId");

                    b.HasIndex("PrincipalBandId");

                    b.HasIndex("ProfessionId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("RankId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Application.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Field")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MenuType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("sortOrder")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Application.SubMenu", b =>
                {
                    b.Property<int>("SubMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubMenuId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Field")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("sortOrder")
                        .HasColumnType("int");

                    b.HasKey("SubMenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.General.ChangesRequest", b =>
                {
                    b.Property<int>("ChangesRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChangesRequestId"));

                    b.Property<int?>("ChangesType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsModified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdinationId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChangesRequestId");

                    b.HasIndex("UsersId");

                    b.ToTable("ChangesRequests");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.General.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackActionTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FeedbackAttachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FeedbackCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeedbackStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FeedbackStatusChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedbackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Band", b =>
                {
                    b.Property<int>("BandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BandId"));

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BandId");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("ElderInChargeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElderInChargeRank")
                        .HasColumnType("int");

                    b.Property<string>("FinancialSecretaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinancialSecretaryRank")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("SecretaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecretaryRank")
                        .HasColumnType("int");

                    b.HasKey("BranchId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Cathedral", b =>
                {
                    b.Property<int>("CathedralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CathedralId"));

                    b.Property<string>("CathedralName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.HasKey("CathedralId");

                    b.HasIndex("PriorityId");

                    b.ToTable("Cathedrals");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Cmc", b =>
                {
                    b.Property<int>("CmcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CmcId"));

                    b.Property<int?>("CmcOrder")
                        .HasColumnType("int");

                    b.Property<int?>("PriorityId")
                        .HasColumnType("int");

                    b.HasKey("CmcId");

                    b.HasIndex("PriorityId");

                    b.ToTable("Cmcs");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("DistrictAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.Property<string>("NationalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Ordination", b =>
                {
                    b.Property<int>("OrdinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdinationId"));

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("NextRankId")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("OrdinationId");

                    b.HasIndex("BranchId");

                    b.HasIndex("RankId");

                    b.HasIndex("UsersId");

                    b.ToTable("Ordinations");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.PrincipalBand", b =>
                {
                    b.Property<int>("PrincipalBandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrincipalBandId"));

                    b.Property<string>("PrincipalBandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrincipalBandOrder")
                        .HasColumnType("int");

                    b.HasKey("PrincipalBandId");

                    b.ToTable("PrincipalBands");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Priority", b =>
                {
                    b.Property<int>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriorityId"));

                    b.Property<int?>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<string>("PriorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Profession", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionId"));

                    b.Property<string>("ProfessionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessionId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinceId"));

                    b.Property<int?>("CmcId")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceId");

                    b.HasIndex("CmcId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"));

                    b.Property<string>("QualificationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QualificationId");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Rank", b =>
                {
                    b.Property<int>("RankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RankId"));

                    b.Property<int?>("EndYearCount")
                        .HasColumnType("int");

                    b.Property<string>("RankGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RankOrder")
                        .HasColumnType("int");

                    b.HasKey("RankId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Report.GeneralReportModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CppInChurch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalBandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year1")
                        .HasColumnType("int");

                    b.Property<int?>("Year10")
                        .HasColumnType("int");

                    b.Property<int?>("Year11")
                        .HasColumnType("int");

                    b.Property<int?>("Year12")
                        .HasColumnType("int");

                    b.Property<int?>("Year13")
                        .HasColumnType("int");

                    b.Property<int?>("Year14")
                        .HasColumnType("int");

                    b.Property<int?>("Year15")
                        .HasColumnType("int");

                    b.Property<int?>("Year16")
                        .HasColumnType("int");

                    b.Property<int?>("Year2")
                        .HasColumnType("int");

                    b.Property<int?>("Year3")
                        .HasColumnType("int");

                    b.Property<int?>("Year4")
                        .HasColumnType("int");

                    b.Property<int?>("Year5")
                        .HasColumnType("int");

                    b.Property<int?>("Year6")
                        .HasColumnType("int");

                    b.Property<int?>("Year7")
                        .HasColumnType("int");

                    b.Property<int?>("Year8")
                        .HasColumnType("int");

                    b.Property<int?>("Year9")
                        .HasColumnType("int");

                    b.Property<int?>("YearOfMarriage")
                        .HasColumnType("int");

                    b.ToTable("generalReportModel_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Report.MemberReport", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CppInChurch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalBandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfMarriage")
                        .HasColumnType("int");

                    b.ToTable("memberRepot_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Report.OrdinationReport", b =>
                {
                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rank9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year1")
                        .HasColumnType("int");

                    b.Property<int?>("Year10")
                        .HasColumnType("int");

                    b.Property<int?>("Year11")
                        .HasColumnType("int");

                    b.Property<int?>("Year12")
                        .HasColumnType("int");

                    b.Property<int?>("Year13")
                        .HasColumnType("int");

                    b.Property<int?>("Year14")
                        .HasColumnType("int");

                    b.Property<int?>("Year15")
                        .HasColumnType("int");

                    b.Property<int?>("Year16")
                        .HasColumnType("int");

                    b.Property<int?>("Year2")
                        .HasColumnType("int");

                    b.Property<int?>("Year3")
                        .HasColumnType("int");

                    b.Property<int?>("Year4")
                        .HasColumnType("int");

                    b.Property<int?>("Year5")
                        .HasColumnType("int");

                    b.Property<int?>("Year6")
                        .HasColumnType("int");

                    b.Property<int?>("Year7")
                        .HasColumnType("int");

                    b.Property<int?>("Year8")
                        .HasColumnType("int");

                    b.Property<int?>("Year9")
                        .HasColumnType("int");

                    b.ToTable("ordinationReport_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Entity.StudentEntitiy.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EDataBank.Core.Views.BranchView", b =>
                {
                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElderInChargeRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialSecretaryRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretaryRank")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("branch_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.CalculateMemberInProvinceForPie", b =>
                {
                    b.Property<int?>("Members")
                        .HasColumnType("int");

                    b.Property<double?>("MembersDivTotalMembers")
                        .HasColumnType("float");

                    b.Property<double?>("MembersDivTotalMembersMulByThreeSixty")
                        .HasColumnType("float");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CalculateMeberInProvinceForPies", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.ChangesView", b =>
                {
                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangesRequestId")
                        .HasColumnType("int");

                    b.Property<string>("ChangesType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsModified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdinationId")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Changes_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.MaleAndFemaleCountInProvince", b =>
                {
                    b.Property<int?>("Female")
                        .HasColumnType("int");

                    b.Property<int?>("Male")
                        .HasColumnType("int");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("MaleAndFemaleCountInProvinces", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.MenuView", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuSortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("MenuType")
                        .HasColumnType("int");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubMenuId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("subMenuSortOrder")
                        .HasColumnType("int");

                    b.ToTable("Menu_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.OrdinationView", b =>
                {
                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextRankId")
                        .HasColumnType("int");

                    b.Property<int>("OrdinationId")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RankOrder")
                        .HasColumnType("int");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.ToTable("Ordination_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.PermissionView", b =>
                {
                    b.Property<bool>("CanApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanExecute")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("CanView")
                        .HasColumnType("bit");

                    b.Property<string>("Display")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("permission_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.TotalMembersMaleAndFemale", b =>
                {
                    b.Property<int?>("Female")
                        .HasColumnType("int");

                    b.Property<int?>("Male")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.ToTable("TotalMembersMaleAndFemales", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Views.UserView", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BandId")
                        .HasColumnType("int");

                    b.Property<string>("BandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CppInChurch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAccountLocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAcountValidated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastAccessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdinationRankOfSpouse")
                        .HasColumnType("int");

                    b.Property<int?>("OtherBandsAssociation")
                        .HasColumnType("int");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrincipalBandId")
                        .HasColumnType("int");

                    b.Property<string>("PrincipalBandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<string>("RankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankOfSpouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearOfMarriage")
                        .HasColumnType("int");

                    b.ToTable("User_vw", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Permission", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Account.Group", "Group")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.UserGroup", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Account.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDataBank.Core.Entity.Account.Users", "User")
                        .WithMany("Groups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Users", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Band", "Band")
                        .WithMany()
                        .HasForeignKey("BandId");

                    b.HasOne("EDataBank.Core.Entity.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("EDataBank.Core.Entity.Model.PrincipalBand", "PrincipalBand")
                        .WithMany()
                        .HasForeignKey("PrincipalBandId");

                    b.HasOne("EDataBank.Core.Entity.Model.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionId");

                    b.HasOne("EDataBank.Core.Entity.Model.Qualification", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId");

                    b.HasOne("EDataBank.Core.Entity.Model.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.Navigation("Band");

                    b.Navigation("Branch");

                    b.Navigation("PrincipalBand");

                    b.Navigation("Profession");

                    b.Navigation("Qualification");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Application.SubMenu", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Application.Menu", "Menu")
                        .WithMany("SubMenu")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.General.ChangesRequest", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Account.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Branch", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("EDataBank.Core.Entity.Model.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("District");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Cathedral", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Cmc", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.District", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Ordination", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("EDataBank.Core.Entity.Model.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.HasOne("EDataBank.Core.Entity.Account.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId");

                    b.Navigation("Branch");

                    b.Navigation("Rank");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Model.Province", b =>
                {
                    b.HasOne("EDataBank.Core.Entity.Model.Cmc", "Cmc")
                        .WithMany()
                        .HasForeignKey("CmcId");

                    b.Navigation("Cmc");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Group", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Account.Users", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("EDataBank.Core.Entity.Application.Menu", b =>
                {
                    b.Navigation("SubMenu");
                });
#pragma warning restore 612, 618
        }
    }
}
